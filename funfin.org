#+TITLE: Purely Functional Personal Finance
#+AUTHOR: Andreas Pauley
#+DATE: 10 September 2018
#+REVEAL_TRANS: default
#+OPTIONS: toc:nil, num:nil

* Purely Functional Personal Finance

with hledger

* What do I want?

 - The full picture
 - Full control
 - Useful info from my data
 - Low maintenance
 - Privacy
 - Open (future proof) file/data formats

** The full picture

#+ATTR_REVEAL: :frag (appear)
 - All major financial events
   - buying/selling a house
   - bonuses, shares
 - Multiple currencies/assets

** Full control

#+ATTR_REVEAL: :frag (appear)
 - Classify transactions in a way that makes sense to me
 - Easily improve or change how I classify transactions
 - Time: decide when and how much of my time to spend

** Useful info from my data

#+ATTR_REVEAL: :frag (appear)
 - Average expenses over the past n months (budgeting)
 - Net worth over time - hopefully increases every year
 - Expose "hidden" expenses, e.g. taxes
 - Expose "hidden" income, e.g. company benefits
 - Separate tax-related accounts
    - Interest vs Dividends vs Capital Gains vs Income
    - RA's, Tax-free Savings Accounts etc

** And don't forget...

#+ATTR_REVEAL: :frag (appear)
 - Low maintenance
 - Privacy
 - Open (future proof) file/data formats

* What are the options?

#+ATTR_REVEAL: :frag (appear)
 - Online systems e.g. 22seven, YNAB
 - Your Own Spreadsheet
 - Traditional Desktop Apps e.g. GnuCash, Quicken
 - Plaintext Accounting software e.g. hledger, ledger, beancount etc

* Online Apps

| Pros                      | Cons                      |
|---------------------------+---------------------------|
| Low learning curve        | No full picture           |
| Auto import some accounts | No multi-currency support |
| Day-to-day view           |                           |
| Low maintenance           | Low on Privacy            |
| Pre-created reports       | No custom reports         |
| Auto-classification       | Useful classification     |

* A Spreadsheet

| Pros            | Cons                   |
|-----------------+------------------------|
| Full picture    | High maintenance       |
| Flexible        | Transaction import     |
| Learning curve  | Everything is DIY      |
| Built-in graphs | Not an accounting tool |
| Privacy         |                        |

* GnuCash

| Pros              | Cons                         |
|-------------------+------------------------------|
| GUI               | GUI                          |
| Full picture      | High maintenance             |
| Multi-currency    | GUI-approved currencies      |
| Import statements | Manual classification        |
| Reports           | Black box - hidden internals |
| Privacy           | Easy to screw it up          |
|                   | Learning curve               |

* hledger

| Pros                       | Cons             |
|----------------------------+------------------|
| Plain text files           | Learning curve   |
| Full picture               | Only for geeks   |
| Multi-currency             | Some DIY Reports |
| Import statements          |                  |
| Rules-based classification |                  |
| Maintenance                |                  |
| Privacy                    |                  |

* A Purely Functional Approach

#+ATTR_REVEAL: :frag (appear)
 - Driven by CSV statements - the input data
 - Classified with rules - the functions
 - Generated plain text journal files - the output

* Introducing hledger-makeitso

https://github.com/apauley/hledger-makeitso

#+ATTR_REVEAL: :frag (appear)
 - Inspired by [[https://github.com/adept/full-fledged-hledger][Full-fledged Hledger]]
 - A CLI program (script?) written in Haskell using mostly Turtle
 - Basically the parts of my automated hledger setup that isn't specific to me

* The hledger-makeitso workflow

#+ATTR_REVEAL: :frag (appear)
 - Save an input CSV file to a specific directory
 - Run: hledger-makeitso import
 - Add some classification rules if you want

* Example

** An input file

#+NAME: 123456789_2018-01-30.csv
#+BEGIN_SRC csv
2,account_number,'MR JOHN D DEER','FNB TJEKREKENING'
3,,'Staat'
3,'Staatnommer','Vanaf Datum','Tot Datum','Openingsaldo','Afsluitingsaldo','BTW Gehef'
3,55,'28 Desember 2017','28 Januarie 2018',0.01,0.01,-0.01
4,,'Opsomming'
5,,'Transaksies'
5,'Nommer','Datum','Beskrywing1','Beskrywing2','Beskrywing3','Bedrag','Saldo','Opgeloopte Koste'
5,1,'29 Des',"Payment received","Company, Inc",,5000.01,7000.01,
5,2,'01 Jan',"POS Transaction","Grocery Store","My town",-4000.00,3000.01,
6,'END'
#+END_SRC

Copy it here:

=import/mybank/savings/1-in/2018/123456789_2018-01-30.csv=

** Optional preprocessing

https://github.com/apauley/fnb-csv-demoronizer

#+NAME: 123456789_2018-01-30-preprocessed.csv
#+BEGIN_SRC csv
"5","'Nommer'","'Datum'","'Beskrywing1'","'Beskrywing2'","'Beskrywing3'","'Bedrag'","'Saldo'","'Opgeloopte Koste'","account2"
"5","1","2017-12-29","Payment received","Company, Inc","","5000.01","7000.01","","income:spouse:taxyear2018:salary:nett"
"5","2","2018-01-01","POS Transaction","Grocery Store","My town","-4000.01","3000.01","",
#+END_SRC

Your preprocess script should save it here:

=import/mybank/savings/2-preprocessed/2018/123456789_2018-01-30.csv=

** Opening Balances for the account

#+BEGIN_SRC hledger
2017-12-28 Savings Account Opening Balance
    assets:current:spouse:mybank:savings               R2000.00
    equity:opening balances:spouse:mybank:savings
#+END_SRC

** A rules file

#+BEGIN_SRC hledger
skip 1

fields _, code, date, desc1, desc2, desc3, amount, balance, _, account2

currency R
status *

account1 assets:current:spouse:mybank:savings
description %desc1/%desc2/%desc3

if
POS.*Grocery Store.*My town
  account2 expenses:food:groceries
#+END_SRC

** The resulting files

#+BEGIN_SRC tree
├── import
│   └── mybank
│       ├── mybank.journal
│       └── savings
│           ├── 1-in
│           │   └── 2018
│           │       └── 123456789_2018-01-30.csv
│           ├── 2-preprocessed
│           │   └── 2018
│           │       └── 123456789_2018-01-30.csv
│           ├── 3-journal
│           │   └── 2018
│           │       └── 123456789_2018-01-30.journal
│           ├── fnb-csv-demoronizer
│           ├── mybank-savings.journal
│           ├── mybank-savings.rules
│           ├── opening.journal
│           └── preprocess
└── import-all.journal
#+END_SRC
